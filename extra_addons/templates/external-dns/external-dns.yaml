apiVersion: v1
kind: Namespace
metadata:
  name: external-dns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: external-dns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services","endpoints","pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: external-dns
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: external-dns
data:
  Corefile: |-
    .:53 {
      log . {
        class denial
      }
      cache
      errors
      loadbalance round_robin
      whoami
      health
      prometheus 0.0.0.0:9153
      forward . 223.5.5.5:53
    }
    k8s.local {
      etcd k8s.local {
        stubzones
        path /skydns
        endpoint http://coredns-etcd:2379
        upstream 223.5.5.5:53 223.6.6.6:53
        debug
      }
      errors
      log
    }
---
{% if kube_external_dns_ip %}
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: coredns
  name: coredns-tcp
  namespace: external-dns
spec:
  type: LoadBalancer
  externalIPs:
  - {{ kube_external_dns_ip }}
  ports:
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: coredns
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: coredns
  name: coredns-udp
  namespace: external-dns
spec:
  type: LoadBalancer
  externalIPs:
  - {{ kube_external_dns_ip }}
  ports:
  - name: dns-udp
    port: 53
    protocol: UDP
  selector:
    k8s-app: coredns
{% else %}
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: coredns
  name: coredns
  namespace: external-dns
spec:
  type: NodePort
  ports:
  - name: dns-tcp
    port: 53
    nodePort: 30053
    protocol: TCP
  - name: dns-udp
    port: 53
    nodePort: 30053
    protocol: UDP
  - name: metrics
    port: 9153
    protocol: TCP
  selector:
    k8s-app: coredns
{% endif %}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: coredns-etcd
  name: coredns-etcd
  namespace: external-dns
spec:
  ports:
  - name: etcd-http
    port: 2379
  - name: etcd-peer
    port: 2380
  selector:
    k8s-app: coredns-etcd
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: coredns
  name: coredns
  namespace: external-dns
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      k8s-app: coredns
  template:
    metadata:
      labels:
        k8s-app: coredns
    spec:
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: node-role.kubernetes.io/master
#                operator: In
#                values:
#                - ''
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      containers:
      - name: coredns
        image: {{ kube_coredns_image }}
        args:
        - -conf
        - /etc/coredns/Corefile
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: coredns-etcd
  name: coredns-etcd
  namespace: external-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: coredns-etcd
  template:
    metadata:
      labels:
        k8s-app: coredns-etcd
    spec:
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      containers:
      - name: coredns-etcd
        image: {{ kube_coredns_etcd_image }}
        command: ["/usr/local/bin/etcd"]
        args:
        - --listen-client-urls=http://0.0.0.0:2379
        - --advertise-client-urls=http://0.0.0.0:2379
        - --data-dir=/var/lib/etcd
        livenessProbe:
          failureThreshold: 5
          tcpSocket:
            port: 2379
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - name: etcd-http
          containerPort: 2379
          protocol: TCP
        - name: etcd-peer
          containerPort: 2380
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: etcd-data
          mountPath: /var/lib/etcd
      volumes:
      - name: etcd-data
        hostPath:
          path: /var/lib/coredns-etcd
          type: DirectoryOrCreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: external-dns
  labels:
    k8s-app: external-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: external-dns
  template:
    metadata:
      labels:
        k8s-app: external-dns
    spec:
      serviceAccountName: external-dns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      containers:
      - name: external-dns
        image: {{ kuber_external_dns_image }}
        env:
        - name: ETCD_URLS
          value: "http://coredns-etcd:2379"
        args:
        - --provider=coredns
        - --source=service
        - --source=ingress
        - --registry=txt
        - --interval=15s
        - --log-level=debug
{% raw %}
        # - --fqdn-template="{{.Namespace}}.k8s.local"
        # - --domain-filter=k8s.local
        # - --namespace=default
        # - --txt-owner-id=default.k8s.local
        # - --metrics-address=":7979"
{% endraw %}

